<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2.0">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>225</x>
      <y>70</y>
      <w>225</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
*State*
--
-makeAction(request Request,account Account) Request
+logIn(loginCredentials: LoginRequest): void
+logOut(): void
+createAccount(newAccount: Account): void
+playGame(newGameRequest: NewGameRequest): void
+sendMessage(message: MessageRequest): void
+makeMove(move: MoveRequest): Board
+quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>225</y>
      <w>200</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>*Connected*
--
+logIn(loginCredentials: LoginRequest): void
+createAccount(newAccount: Account): void
--
Responisibilities
- Performs login or register event</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>220</y>
      <w>210</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>*LoggedIn*
--
+logOut(): void
+playGame(newGameRequest: NewGameRequest): void
--
Responisibilities
- Performs new game event
- Performs logout event</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>95</x>
      <y>175</y>
      <w>230</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
implements</panel_attributes>
    <additional_attributes>440.0;10.0;440.0;60.0;10.0;60.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>110</x>
      <y>145</y>
      <w>105</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>use state design pattern here</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>335</x>
      <y>175</y>
      <w>50</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
implements</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>265</x>
      <y>355</y>
      <w>125</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*DataBaseConnector*
Package::tp.project.goGame.server
--
-sessionFactory: SessionFactory
--
+create(account: Account) Request
+update(account: Account) Request
+delete(account: Account) Request
+read() Request
-findById(int userID) Account
-getSessionFactory() SessionFactory

--
Responsibilities
-- Sending queries to database
-- retun informaion about event</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>90</x>
      <y>285</y>
      <w>235</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>450.0;140.0;450.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>335</x>
      <y>285</y>
      <w>35</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>220</y>
      <w>200</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>*InGame*
--
+sendMessage(message: MessageRequest): void
+makeMove(move: MoveRequest): Board
+quitGame(): void
--
Responisibilities
- Performs actions in game
- Provide chat with opponent</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>365</x>
      <y>175</y>
      <w>235</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
implements</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;450.0;60.0;450.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>285</y>
      <w>250</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;90.0;480.0;90.0;480.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>735</x>
      <y>220</y>
      <w>200</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>*InQueue*
--
+quitQueue(): void
--
Responisibilities
- Performs actions in game
- Provide chat with opponent</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>175</y>
      <w>445</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
implements</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;870.0;40.0;870.0;90.0</additional_attributes>
  </element>
</diagram>
